{"version":3,"sources":["Movies.js","Section.js","Header.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Movies","year","title","summary","poster","genres","className","src","alt","map","data","i","slice","Section","state","kim","getMovies","a","axios","get","movies","setState","this","medium_cover_image","id","Component","Header","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAuBeA,MApBf,YAAyD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OACvC,OACI,sBAAKC,UAAU,SAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,IACvB,sBAAKI,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,6BAEQI,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACP,oCAAeD,EAAf,MAASC,QAIrB,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,gB,iBCqBLC,G,kNAhCXC,MAAQ,CACJC,IAAM,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEACqCC,IAAMC,IAAI,0CAD/C,gBACkBC,EADlB,EACAV,KAASA,KAASU,OAC1B,EAAKC,SAAS,CACVN,IAAMK,IAHF,2C,kEASRE,KAAKN,c,+BAIA,IAEGD,EAAQO,KAAKR,MAAbC,IACR,OACI,yBAAST,UAAU,YAAnB,SAEYS,EAAIN,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CAAsBT,KAAMS,EAAKT,KAAMC,MAAOQ,EAAKR,MAAOC,QAASO,EAAKP,QAASC,OAAQM,EAAKa,mBAAoBlB,OAAQK,EAAKL,QAAlHK,EAAKc,a,GAzBxBC,cCKPC,EARA,WACX,OACI,yBCMOC,EARA,WACX,OACI,yBCcOC,G,6KAVX,OACE,sBAAKtB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GANUmB,cCMHI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81f8389e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Movies.scss';\r\n\r\nfunction Movies({year, title, summary, poster, genres}) { \r\n        return (\r\n            <div className=\"movies\">\r\n                <img src={poster} alt={title} />\r\n                <div className=\"movies_data\">\r\n                    <h3 className=\"movies_title\">{title}</h3>\r\n                    <h5 className=\"movies_year\">{year}</h5>\r\n                    <ul>\r\n                        {\r\n                            genres.map((data, i)=>(\r\n                                <li key={i}>/ {data} </li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                    <p className=\"movies_summary\">{summary.slice(0,100)}...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from 'react';\r\nimport Movies from './Movies';\r\nimport axios from 'axios';\r\nimport './Section.scss';\r\n\r\nclass Section extends Component {\r\n    state = {  //  movies라는 키를 가진 객체{}를 생성한다. \r\n        kim : [] // 대열변수로 키를 만든다.\r\n    }\r\n\r\n    getMovies = async () => { //비동기식 방식으로 오픈API를 가지고 온다. api의 형식이 객체형식이므로 {}해준다. {}안에는 키값이 \r\n        const { data : { data : { movies }}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json\")\r\n        this.setState({\r\n            kim : movies // state에 kim(key)가 movies로수정이 된다. 이후 render()가 호출된다.\r\n        })\r\n    }\r\n\r\n    //reder() 수행 후 한번만 호출되는 함수 componentDidMount()\r\n    componentDidMount() {\r\n        this.getMovies()\r\n    }\r\n    c\r\n\r\n    render() {\r\n        //비구조화 할당으로 변경\r\n        const { kim } = this.state;\r\n        return (\r\n            <section className=\"container\">\r\n                    {\r\n                        kim.map((data)=>(\r\n                            <Movies key={data.id} year={data.year} title={data.title} summary={data.summary} poster={data.medium_cover_image} genres={data.genres} />\r\n                        ))\r\n                    }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Section;\r\n\r\n// 코딩 순서도\r\n// -> render() 함수가 실행이 된다.\r\n// -> componenetDidMount() 함수가 있다면 이함수를 읽게된다.\r\n// -> setState() \r\n// -> render()","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Section from './Section';\nimport Header from './Header';\nimport Footer from './Footer';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"wrap\">\n        <Header />\n        <Section />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}